

#include "common_ps_fxc.h"
#include "common_deferred_fxc.h"


sampler sRadiosity						: register( s0 );
sampler sNormals						: register( s1 );

static const float flTexelSize = 1.0f / RADIOSITY_BUFFER_RES;

struct PS_INPUT
{
	float4 vTexCoord				: TEXCOORD0;

	float2 vGOrig_Cur				: TEXCOORD0;
	float4 vGOrig_One				: TEXCOORD1;
	float4 vGOrig_Two				: TEXCOORD2;
};


struct PS_OUTPUT
{
	float4 vColor_0				:	COLOR0;
};


PS_OUTPUT main( const PS_INPUT In )
{
	PS_OUTPUT Out;

	float3 color = tex2D( sRadiosity, In.vTexCoord.xy ).rgb;

	color += tex2D( sRadiosity, In.vGOrig_Cur.xy + float2( flTexelSize, 0 ) ).rgb;
	color += tex2D( sRadiosity, In.vGOrig_Cur.xy + float2( -flTexelSize, 0 ) ).rgb;
	color += tex2D( sRadiosity, In.vGOrig_Cur.xy + float2( 0, flTexelSize ) ).rgb;
	color += tex2D( sRadiosity, In.vGOrig_Cur.xy + float2( 0, -flTexelSize ) ).rgb;

	color += tex2D( sRadiosity, In.vGOrig_One.xy ).rgb;
	color += tex2D( sRadiosity, In.vGOrig_One.zw ).rgb;

	Out.vColor_0 = float4( color * ( 1.0f / 7.0f ), 1 );

	return Out;
}